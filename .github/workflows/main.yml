name: stable_release

on:
  pull_request:
    types: [closed]
    branches: [stable]
  push:
    branches: [stable]
    tags: ['v*']

jobs:
  modCompilePush:
    name: compile_push
    if: github.event_name == 'push'
    runs-on: ubuntu-latest
    outputs:
      folder_name: ${{ steps.set_name.outputs.folder }}
    steps:
      - name: Set folder name
        id: set_name
        run: |
          SAFE_NAME=$(echo "${GITHUB_REF##*/}" | tr '/' '-')
          echo "folder=$SAFE_NAME" >> $GITHUB_OUTPUT

      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Check contents
        run: ls -la newVersion/

      - name: Create ZIP
        run: |
          mkdir -p packaged
          zip -r packaged/eam_${{ steps.set_name.outputs.folder }}.zip newVersion/*

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: eam_${{ steps.set_name.outputs.folder }}
          path: packaged/*

  modCompilePR:
    name: compile_closed_pr
    if: github.event_name == 'pull_request' && github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    outputs:
      folder_name: ${{ steps.set_name.outputs.folder }}
    steps:
      - name: Set folder name
        id: set_name
        run: |
          SAFE_NAME=$(echo "${GITHUB_REF##*/}" | tr '/' '-')
          echo "folder=$SAFE_NAME" >> $GITHUB_OUTPUT

      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Check contents
        run: ls -la newVersion/

      - name: Create ZIP
        run: |
          mkdir -p packaged
          zip -r packaged/eam_${{ steps.set_name.outputs.folder }}.zip newVersion/*

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: eam_${{ steps.set_name.outputs.folder }}
          path: packaged/*

  publishFromPush:
    name: release_push
    if: github.event_name == 'push'
    needs: modCompilePush
    runs-on: ubuntu-latest
    steps:
      - name: Install GitHub CLI
        run: sudo apt install -y gh

      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: eam_${{ needs.modCompilePush.outputs.folder_name }}
          path: artifact_output

      - name: Check contents
        run: ls -la artifact_output

      - name: Upload ZIP to release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          ZIP_PATH=$(find artifact_output -name '*.zip' | head -n 1)
          if [ -f "$ZIP_PATH" ]; then
            gh release upload "${{ needs.modCompilePush.outputs.folder_name }}" "$ZIP_PATH"
          else
            echo "❌ ZIP file not found in artifact_output"
            exit 1
          fi

  publishFromPR:
    name: release_pr
    if: github.event_name == 'pull_request' && github.event.pull_request.merged == true
    needs: modCompilePR
    runs-on: ubuntu-latest
    steps:
      - name: Install GitHub CLI
        run: sudo apt install -y gh

      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: eam_${{ needs.modCompilePR.outputs.folder_name }}
          path: artifact_output

      - name: Check contents
        run: ls -la artifact_output

      - name: Create release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          ZIP_PATH=$(find artifact_output -name '*.zip' | head -n 1)
          if [ -f "$ZIP_PATH" ]; then
            gh release create "${{ needs.modCompilePR.outputs.folder_name }}" "$ZIP_PATH" \
              --title "${{ needs.modCompilePR.outputs.folder_name }}" \
              --notes "Release from merged PR"
          else
            echo "❌ ZIP file not found in artifact_output"
            exit 1
          fi
